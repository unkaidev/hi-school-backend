@startuml

package phongvan.hischoolbackend.Service {
    @startuml
    class SchoolClassService {
        - schoolClassRepository: SchoolClassRepository
        - yearRepository: YearRepository
        - scoreRepository: ScoreRepository
        - semesterRepository: SemesterRepository
        - userRepository: UserRepository
        - teacherRepository: TeacherRepository
        - studentRepository: StudentRepository
        - teacherAssignmentRepository: TeacherAssignmentRepository

        + findById(id: Integer): SchoolClass
        + aSchoolClass(name: String): Optional<SchoolClass>
        + allSchoolClasses(): List<SchoolClass>
        + findPaginated(schoolId: Integer, pageable: Pageable): Page<SchoolClass>
        + findPaginatedForHeadTeacher(username: String, schoolId: Integer, pageable: Pageable): Page<SchoolClass>
        + deleteSchoolClass(id: int): void
        + updateSchoolClass(schoolClass: SchoolClass): void
        + existsByName(name: String): boolean
        + findAllByName(schoolClassName: String): List<SchoolClass>
        + existsByNameAndSchoolYearId(schoolClassName: String, id: Integer): boolean
        + findAllBySchoolYear(schoolYear: SchoolYear): List<SchoolClass>
        + findAllBySchoolYear_Id(yearId: int): List<SchoolClass>
        + findAllBySchoolYear_IdAndGradeForHeadteacher(yearId: int, username: String, grade: String): List<SchoolClass>
        + findAllBySchoolYear_IdAndGradeForStudent(yearId: int, username: String, grade: String): List<SchoolClass>
        + findAllBySemester_IdAndTeacher(semesterId: int, username: String): List<SchoolClass>
        + findAllBySemester_IdAndStudent(semesterId: int, username: String): Set<SchoolClass>
        + findAllBySchoolYear_IdAndGrade(yearId: int, grade: String): List<SchoolClass>
        + findAllBySchool(schoolId: int): List<SchoolClass>
        + findAllBySemesterIdAndHeadTeacher(semesterId: int, username: String): List<SchoolClass>
        + countStudentsInClass(classId: int): int
    }
    @enduml
}

@enduml
