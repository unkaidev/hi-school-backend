@startuml

actor Client
participant "Controller: SchoolClassController" as Controller
participant "SchoolClassRequest" as SchoolClassRequest
participant "TeacherRepository" as TeacherRepository
participant "RoleRepository" as RoleRepository
participant "YearRepository" as YearRepository
participant "SchoolClassService" as SchoolClassService
participant "MessageResponse" as MessageResponse

Client -> Controller: send SchoolClassRequest
activate Controller
Controller -> SchoolClassRequest: getName()
Controller -> SchoolClassRequest: getSchoolYear().getName()
Controller -> SchoolClassRequest: getGrade()
Controller -> SchoolClassRequest: getSchoolYear().getSchoolId()
deactivate Controller

activate SchoolClassRequest
Controller -> TeacherRepository: getById()
TeacherRepository --> Controller: newTeacher
Controller -> TeacherRepository: getById()
TeacherRepository --> Controller: teacherRoles
Controller -> RoleRepository: findByName()
RoleRepository --> Controller: role_headTeacher
Controller -> newTeacher: getUser().getRoles()
newTeacher --> Controller: teacherRoles
Controller -> newTeacher: setRoles()
Controller -> TeacherRepository: save()
TeacherRepository --> Controller: saved newTeacher
Controller -> Controller: checkExistSchoolClass()
alt SchoolClass does not exist
    Controller -> YearRepository: findByNameAndSchool_Id()
    YearRepository --> Controller: schoolYear
    alt School year not found
        Controller -> MessageResponse: create response
        deactivate SchoolClassRequest
        Controller -> Client: send response
        deactivate Controller
        Controller -> MessageResponse: create response
        Client -> Controller: send response
        deactivate Controller
        deactivate MessageResponse
    else
        Controller -> SchoolClassService: updateSchoolClass()
        SchoolClassService --> Controller: updated schoolClass
        Controller -> MessageResponse: create response
        deactivate SchoolClassRequest
        Controller -> Client: send response
end
deactivate SchoolClassRequest

activate MessageResponse
Controller -> Client: send response
deactivate Controller
deactivate MessageResponse

@enduml
