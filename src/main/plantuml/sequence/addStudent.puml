@startuml

actor Client
participant "Controller: StudentController" as Controller
participant "StudentRequest" as StudentRequest
participant "IssuedPlaceRepository" as IssuedPlaceRepository
participant "AddressRepository" as AddressRepository
participant "ParentRepository" as ParentRepository
participant "SchoolRepository" as SchoolRepository
participant "RoleRepository" as RoleRepository
participant "UserRepository" as UserRepository
participant "StudentService" as StudentService
participant "MessageResponse" as MessageResponse

Client -> Controller: send StudentRequest
activate Controller
Controller -> StudentRequest: getAvatar()
Controller -> StudentRequest: getFirstName()
Controller -> StudentRequest: getLastName()
Controller -> StudentRequest: getDateOfBirth()
Controller -> StudentRequest: getGender()
Controller -> StudentRequest: getNationality()
Controller -> StudentRequest: getEthnicity()
Controller -> StudentRequest: getCitizenId()
Controller -> StudentRequest: getIssuedPlace().getName()
Controller -> StudentRequest: getIssuedDate()
Controller -> StudentRequest: getPermanentAddress()
Controller -> StudentRequest: getContactAddress()
Controller -> StudentRequest: getParent().getFirstName()
Controller -> StudentRequest: getParent().getLastName()
Controller -> StudentRequest: getUser().getSchoolId()
deactivate Controller

activate StudentRequest
Controller -> IssuedPlaceRepository: findByName()
IssuedPlaceRepository --> Controller: IssuedPlace
Controller -> AddressRepository: save()
AddressRepository --> Controller: saved permanent address
Controller -> AddressRepository: save()
AddressRepository --> Controller: saved contact address
Controller -> ParentRepository: save()
ParentRepository --> Controller: saved parent
Controller -> RoleRepository: findByName()
RoleRepository --> Controller: Role_USER
Controller -> UserRepository: save()
UserRepository --> Controller: saved user
Controller -> StudentService: updateStudent()
StudentService --> Controller: updated student
Controller -> MessageResponse: create response
deactivate StudentRequest

activate MessageResponse
Controller -> Client: send response
deactivate Controller
deactivate MessageResponse

@enduml
